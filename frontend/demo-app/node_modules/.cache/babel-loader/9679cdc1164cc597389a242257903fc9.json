{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodePractice\\\\TodoList\\\\frontend\\\\demo-app\\\\src\\\\ListItem.js\";\nimport React, { Component, useState } from 'react';\n\nconst ListItem = ({\n  item,\n  itemDelete,\n  itemUpdate\n}) => {\n  const [isEditable, setIsEditable] = useState(false);\n  const [todoItem, setTodoItem] = useState(item); //     handleDelete() {\n  //         this.props.totalChange(this.props.item);\n  //     }\n  //\n  //     //点击展示输入框\n  //     handleChangeClick = () => {\n  //         this.setState({\n  //             showInput: true\n  //         })\n  //     };\n  // //点击关闭输入框\n  //     handleCloseClick = () => {\n  //         this.setState({\n  //             showInput: !this.state.showInput\n  //         })\n  //     };\n  //\n  // //点击确定按钮\n  //     handleAffirmClick = () => {\n  //         var obj = {\n  //             id: this.props.item.id,\n  //             content: this.state.valueCon,\n  //         }\n  //         console.log(obj);\n  //         this.props.finishedChange(obj);\n  //         //关闭输入框\n  //         this.setState({\n  //             showInput: this.props.isShow\n  //         })\n  //     };\n  // //input改变\n  //     handleChange = (e) => {\n  //         this.setState({\n  //             valueCon: e.target.value\n  //         })\n  //     };\n  //\n  //     componentDidMount() {\n  //         this.setState({\n  //             valueCon: this.props.value,\n  //         })\n  //     }\n  //设置item样式\n\n  const unfinish = {\n    backgroundColor: '#DFFCB5',\n    color: '#2EB872'\n  };\n  const test = {\n    border: 1,\n    solid: \"#ffffff\"\n  };\n  var itemStyle = unfinish;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"task-item\",\n    id: \"task-item-\" + todoItem.id,\n    style: itemStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: todoItem.content,\n    disabled: !isEditable,\n    onChange: e => setTodoItem({ ...item,\n      content: e.target.value\n    }),\n    onBlur: () => {\n      itemUpdate(todoItem);\n      setIsEditable(false);\n    },\n    style: isEditable ? {\n      test\n    } : {\n      test\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"update-btn\",\n    onClick: () => setIsEditable(!isEditable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"\\u4FEE\\u6539\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"delete-btn\",\n    onClick: () => itemDelete(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"\\u5220\\u9664\"));\n};\n\nexport default ListItem;","map":{"version":3,"sources":["D:/CodePractice/TodoList/frontend/demo-app/src/ListItem.js"],"names":["React","Component","useState","ListItem","item","itemDelete","itemUpdate","isEditable","setIsEditable","todoItem","setTodoItem","unfinish","backgroundColor","color","test","border","solid","itemStyle","id","content","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACE,IAAD,CAAxC,CAFiD,CAIrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AACA,QAAMO,QAAQ,GAAG;AACbC,IAAAA,eAAe,EAAE,SADJ;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAAjB;AAIA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAC,CADE;AAETC,IAAAA,KAAK,EAAC;AAFG,GAAb;AAIA,MAAIC,SAAS,GAAGN,QAAhB;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,EAAE,EAAE,eAAeF,QAAQ,CAACS,EAAtD;AAA0D,IAAA,KAAK,EAAED,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA2BI;AACI,IAAA,KAAK,EAAER,QAAQ,CAACU,OADpB;AAEI,IAAA,QAAQ,EAAE,CAACZ,UAFf;AAGI,IAAA,QAAQ,EAAGa,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGN,IAAL;AAAWe,MAAAA,OAAO,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA7B,KAAD,CAHhC;AAII,IAAA,MAAM,EAAE,MAAM;AACVhB,MAAAA,UAAU,CAACG,QAAD,CAAV;AACAD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAPL;AAQI,IAAA,KAAK,EAAED,UAAU,GAAC;AAACO,MAAAA;AAAD,KAAD,GAAQ;AAACA,MAAAA;AAAD,KAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,eAsCI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,OAAO,EAAE,MAAMN,aAAa,CAAC,CAACD,UAAF,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCJ,eAuCI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,OAAO,EAAE,MAAMF,UAAU,CAACD,IAAI,CAACc,EAAN,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCJ,CADJ;AA6CH,CAvGD;;AAyGA,eAAef,QAAf","sourcesContent":["import React, {Component, useState} from 'react';\r\n\r\nconst ListItem = ({item, itemDelete, itemUpdate}) => {\r\n    const [isEditable, setIsEditable] = useState(false);\r\n    const [todoItem, setTodoItem] = useState(item);\r\n\r\n//     handleDelete() {\r\n//         this.props.totalChange(this.props.item);\r\n//     }\r\n//\r\n//     //点击展示输入框\r\n//     handleChangeClick = () => {\r\n//         this.setState({\r\n//             showInput: true\r\n//         })\r\n//     };\r\n// //点击关闭输入框\r\n//     handleCloseClick = () => {\r\n//         this.setState({\r\n//             showInput: !this.state.showInput\r\n//         })\r\n//     };\r\n//\r\n// //点击确定按钮\r\n//     handleAffirmClick = () => {\r\n//         var obj = {\r\n//             id: this.props.item.id,\r\n//             content: this.state.valueCon,\r\n//         }\r\n//         console.log(obj);\r\n//         this.props.finishedChange(obj);\r\n//         //关闭输入框\r\n//         this.setState({\r\n//             showInput: this.props.isShow\r\n//         })\r\n//     };\r\n// //input改变\r\n//     handleChange = (e) => {\r\n//         this.setState({\r\n//             valueCon: e.target.value\r\n//         })\r\n//     };\r\n//\r\n//     componentDidMount() {\r\n//         this.setState({\r\n//             valueCon: this.props.value,\r\n//         })\r\n//     }\r\n\r\n    //设置item样式\r\n    const unfinish = {\r\n        backgroundColor: '#DFFCB5',\r\n        color: '#2EB872',\r\n    };\r\n    const test = {\r\n        border:1,\r\n        solid:\"#ffffff\",\r\n    };\r\n    var itemStyle = unfinish;\r\n\r\n    return (\r\n        <li className=\"task-item\" id={\"task-item-\" + todoItem.id} style={itemStyle}>\r\n            {/*{!this.state.showInput ?*/}\r\n            {/*    <div className=\"change-input\">*/}\r\n            {/*        /!*<span onClick={this.handleFinished} id={item.id} className=\"check-btn\"*!/*/}\r\n            {/*        /!*\tstyle={{backgroundColor: item.status === 0 ? '#fff' : '#A1EAFB'}}*!/*/}\r\n            {/*        /!*></span>*!/*/}\r\n            {/*        <span className=\"name\">{item.content}</span>*/}\r\n            {/*        <span className=\"update-btn\" onClick={this.handleChangeClick}>修改</span>*/}\r\n            {/*        <span className=\"delete-btn\" onClick={this.handleDelete}>删除</span>*/}\r\n            {/*    </div>*/}\r\n            {/*    :*/}\r\n            {/*    <div className=\"write-input\">*/}\r\n            {/*        <div className=\"write-input-name\">*/}\r\n            {/*            <input placeholder=\"请输入\"*/}\r\n            {/*                   defaultValue={this.props.value === '-' ? '' : this.props.value}*/}\r\n            {/*                   onChange={this.handleChange}*/}\r\n            {/*                   style={{height: '25px', margin: '0'}}*/}\r\n            {/*            />*/}\r\n            {/*        </div>*/}\r\n            {/*        <div className=\"write-input-hide\">*/}\r\n            {/*            <span className=\"write-input-hide-yes\" onClick={this.handleAffirmClick}>Y</span>*/}\r\n            {/*            <span>/</span>*/}\r\n            {/*            <span className=\"write-input-hide-no\" onClick={this.handleCloseClick}>N</span>*/}\r\n            {/*        </div>*/}\r\n            {/*    </div>*/}\r\n            {/*}*/}\r\n\r\n            <input\r\n                value={todoItem.content}\r\n                disabled={!isEditable}\r\n                onChange={(e) => setTodoItem({ ...item, content: e.target.value })}\r\n                onBlur={() => {\r\n                    itemUpdate(todoItem);\r\n                    setIsEditable(false);\r\n                }}\r\n                style={isEditable?{test}:{test}}\r\n            />\r\n\r\n            <span className=\"update-btn\" onClick={() => setIsEditable(!isEditable)}>修改</span>\r\n            <span className=\"delete-btn\" onClick={() => itemDelete(item.id)}>删除</span>\r\n\r\n\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}