{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodePractice\\\\TodoList\\\\frontend\\\\demo-app\\\\src\\\\TodoList.js\";\nimport React, { Component, useEffect, useState, Fragment } from 'react';\nimport ListItem from './ListItem';\nimport Dialog from './Dialog';\nimport { getTodos, addTodo, deleteTodo, updateTodo } from \"./api/TodoApi\";\nimport './main.css';\nimport _ from \"lodash\";\n\nconst TodoList = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleLoadTasks = () => {\n    getTodos().then(response => {\n      setList(response);\n    }).catch(error => {\n      setError(\"Unable to retrieve todo's\");\n    });\n  };\n\n  const handleAddTask = () => {\n    if (inputValue === \"\") return;\n    const newTask = {\n      id: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\n      content: inputValue\n    };\n    addTodo(newTask).then(() => {\n      setList([...list, newTask]);\n      setInputValue(\"\");\n    });\n  };\n\n  const handleDeleteTask = id => deleteTodo(id).then(() => {\n    setList(list.filter(item => item.id !== id));\n  });\n\n  const handleUpdateTask = task => {\n    if (task.content === \"\") return;\n    updateTodo(task).then(response => {\n      setList(list.map(x => x.id === response.id ? { ...x,\n        ...response\n      } : x));\n    });\n  };\n\n  useEffect(() => {\n    handleLoadTasks();\n  }, []);\n\n  if (list === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }\n    }, \"Tasks is loading ...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }\n    }, error);\n  } // addTask(newitem)\n  // {\n  //     var allTask = this.state.list;\n  //     allTask.push(newitem);\n  //     this.setState({\n  //         list: allTask\n  //     });\n  // }\n  //\n  // updateFinished(todoItem)\n  // {\n  //     var sum = 0;\n  //     this.state.list.forEach((item) => {\n  //         if (item.id === todoItem.id) {\n  //             item.content = todoItem.content;\n  //         }\n  //         sum++;\n  //     });\n  //     this.setState({\n  //         finished: sum\n  //     });\n  // }\n  //\n  // updateTotal(todoItem)\n  // {\n  //     var obj = [], sum = 0;\n  //     this.state.list.forEach((item) => {\n  //         if (item.id !== todoItem.id) {\n  //             obj.push(item);\n  //             sum++;\n  //         }\n  //     });\n  //     this.setState({\n  //         list: obj,\n  //         finished: sum\n  //     });\n  // }\n\n\n  render();\n  {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"task-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, this.state.list.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n      item: item,\n      finishedChange: this.updateFinished.bind(this),\n      totalChange: this.updateTotal.bind(this),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Dialog, {\n      addNewTask: this.addTask.bind(this),\n      nums: this.state.list.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nexport default TodoList;","map":{"version":3,"sources":["D:/CodePractice/TodoList/frontend/demo-app/src/TodoList.js"],"names":["React","Component","useEffect","useState","Fragment","ListItem","Dialog","getTodos","addTodo","deleteTodo","updateTodo","_","TodoList","inputValue","setInputValue","list","setList","error","setError","handleLoadTasks","then","response","catch","handleAddTask","newTask","id","parseInt","length","content","handleDeleteTask","filter","item","handleUpdateTask","task","map","x","render","state","index","updateFinished","bind","updateTotal","addTask"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState, Fragment} from 'react';\r\nimport ListItem from './ListItem';\r\nimport Dialog from './Dialog';\r\nimport {getTodos, addTodo, deleteTodo, updateTodo} from \"./api/TodoApi\";\r\nimport './main.css';\r\nimport _ from \"lodash\";\r\n\r\nconst TodoList = () => {\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\tconst [list, setList] = useState(null);\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\r\n\tconst handleLoadTasks = () => {\r\n\t\tgetTodos()\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetList(response);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetError(\"Unable to retrieve todo's\");\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleAddTask = () => {\r\n\t\tif (inputValue === \"\") return;\r\n\r\n\t\tconst newTask = {\r\n\t\t\tid: _.parseInt(list.length ? list[list.length - 1].id : 0) + 1,\r\n\t\t\tcontent: inputValue,\r\n\t\t};\r\n\r\n\t\taddTodo(newTask).then(() => {\r\n\t\t\tsetList([...list, newTask]);\r\n\t\t\tsetInputValue(\"\");\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDeleteTask = (id) =>\r\n\t\tdeleteTodo(id).then(() => {\r\n\t\t\tsetList(list.filter((item) => item.id !== id));\r\n\t\t});\r\n\r\n\tconst handleUpdateTask = (task) => {\r\n\t\tif (task.content === \"\") return;\r\n\r\n\t\tupdateTodo(task).then((response) => {\r\n\t\t\tsetList(\r\n\t\t\t\tlist.map((x) => (x.id === response.id ? { ...x, ...response } : x))\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\thandleLoadTasks();\r\n\t}, []);\r\n\r\n\tif (list === null) {\r\n\t\treturn <div>Tasks is loading ...</div>;\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <div>{error}</div>;\r\n\t}\r\n\r\n    // addTask(newitem)\r\n    // {\r\n    //     var allTask = this.state.list;\r\n    //     allTask.push(newitem);\r\n    //     this.setState({\r\n    //         list: allTask\r\n    //     });\r\n    // }\r\n\t//\r\n    // updateFinished(todoItem)\r\n    // {\r\n    //     var sum = 0;\r\n    //     this.state.list.forEach((item) => {\r\n    //         if (item.id === todoItem.id) {\r\n    //             item.content = todoItem.content;\r\n    //         }\r\n    //         sum++;\r\n    //     });\r\n    //     this.setState({\r\n    //         finished: sum\r\n    //     });\r\n    // }\r\n\t//\r\n    // updateTotal(todoItem)\r\n    // {\r\n    //     var obj = [], sum = 0;\r\n    //     this.state.list.forEach((item) => {\r\n    //         if (item.id !== todoItem.id) {\r\n    //             obj.push(item);\r\n    //             sum++;\r\n    //         }\r\n    //     });\r\n    //     this.setState({\r\n    //         list: obj,\r\n    //         finished: sum\r\n    //     });\r\n    // }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>TodoList</h1>\r\n                <ul className=\"task-items\">\r\n                    {this.state.list.map((item, index) =>\r\n                        <ListItem\r\n                            item={item}\r\n                            finishedChange={this.updateFinished.bind(this)}\r\n                            totalChange={this.updateTotal.bind(this)}\r\n                            key={index}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                <Dialog addNewTask={this.addTask.bind(this)} nums={this.state.list.length}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}