{"ast":null,"code":"import _classCallCheck from\"D:\\\\CodePractice\\\\Java\\\\AgileWebProject\\\\work4\\\\demo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\CodePractice\\\\Java\\\\AgileWebProject\\\\work4\\\\demo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\CodePractice\\\\Java\\\\AgileWebProject\\\\work4\\\\demo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\CodePractice\\\\Java\\\\AgileWebProject\\\\work4\\\\demo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import ListItem from'./ListItem';import Dialog from'./Dialog';import'./main.css';var TodoList=/*#__PURE__*/function(_Component){_inherits(TodoList,_Component);var _super=_createSuper(TodoList);function TodoList(props){var _this;_classCallCheck(this,TodoList);_this=_super.call(this,props);_this.state={list:[{id:0,name:'找个日常实习',status:0},{id:1,name:'待到明年1月',status:0},{id:2,name:'再来看看春招',status:0}],finished:0};return _this;}_createClass(TodoList,[{key:\"addTask\",value:function addTask(newitem){var allTask=this.state.list;allTask.push(newitem);this.setState({list:allTask});}},{key:\"updateFinished\",value:function updateFinished(todoItem){var sum=0;this.state.list.forEach(function(item){if(item.id===todoItem.id){item.status=todoItem.status;}if(item.status===1){sum++;}});this.setState({finished:sum});}},{key:\"updateTotal\",value:function updateTotal(todoItem){var obj=[],sum=0;this.state.list.forEach(function(item){if(item.id!==todoItem.id){obj.push(item);if(item.status===1){sum++;}}});this.setState({list:obj,finished:sum});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"TodoList\"),/*#__PURE__*/React.createElement(\"ul\",null,this.state.list.map(function(item,index){return/*#__PURE__*/React.createElement(ListItem,{item:item,finishedChange:_this2.updateFinished.bind(_this2),totalChange:_this2.updateTotal.bind(_this2),key:index});})),/*#__PURE__*/React.createElement(Dialog,{addNewTask:this.addTask.bind(this),nums:this.state.list.length}));}}]);return TodoList;}(Component);export default TodoList;","map":{"version":3,"sources":["D:/CodePractice/Java/AgileWebProject/work4/demo-app/src/TodoList.js"],"names":["React","Component","ListItem","Dialog","TodoList","props","state","list","id","name","status","finished","newitem","allTask","push","setState","todoItem","sum","forEach","item","obj","map","index","updateFinished","bind","updateTotal","addTask","length"],"mappings":"wiBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAO,YAAP,C,GAEMC,CAAAA,Q,oGACL,kBAAaC,KAAb,CAAoB,0CACnB,uBAAMA,KAAN,EAEA,MAAKC,KAAL,CAAa,CACZC,IAAI,CAAE,CAAC,CACNC,EAAE,CAAE,CADE,CAENC,IAAI,CAAE,QAFA,CAGNC,MAAM,CAAE,CAHF,CAAD,CAIH,CACFF,EAAE,CAAE,CADF,CAEFC,IAAI,CAAE,QAFJ,CAGFC,MAAM,CAAE,CAHN,CAJG,CAQH,CACFF,EAAE,CAAE,CADF,CAEFC,IAAI,CAAE,QAFJ,CAGFC,MAAM,CAAG,CAHP,CARG,CADM,CAcZC,QAAQ,CAAE,CAdE,CAAb,CAHmB,aAmBnB,C,6DAEQC,O,CAAS,CACjB,GAAIC,CAAAA,OAAO,CAAG,KAAKP,KAAL,CAAWC,IAAzB,CACAM,OAAO,CAACC,IAAR,CAAaF,OAAb,EACA,KAAKG,QAAL,CAAc,CACbR,IAAI,CAAEM,OADO,CAAd,EAGA,C,sDAEeG,Q,CAAU,CACzB,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACA,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,OAAhB,CAAyB,SAACC,IAAD,CAAU,CAClC,GAAIA,IAAI,CAACX,EAAL,GAAYQ,QAAQ,CAACR,EAAzB,CAA6B,CAC5BW,IAAI,CAACT,MAAL,CAAcM,QAAQ,CAACN,MAAvB,CACA,CACD,GAAIS,IAAI,CAACT,MAAL,GAAgB,CAApB,CAAuB,CACtBO,GAAG,GACH,CACD,CAPD,EAQA,KAAKF,QAAL,CAAc,CACbJ,QAAQ,CAAEM,GADG,CAAd,EAGA,C,gDAEYD,Q,CAAU,CACtB,GAAII,CAAAA,GAAG,CAAG,EAAV,CAAcH,GAAG,CAAG,CAApB,CACA,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,OAAhB,CAAwB,SAACC,IAAD,CAAU,CACjC,GAAIA,IAAI,CAACX,EAAL,GAAYQ,QAAQ,CAACR,EAAzB,CAA6B,CAC5BY,GAAG,CAACN,IAAJ,CAASK,IAAT,EACA,GAAIA,IAAI,CAACT,MAAL,GAAgB,CAApB,CAAwB,CACvBO,GAAG,GACH,CACD,CACD,CAPD,EAQA,KAAKF,QAAL,CAAc,CACbR,IAAI,CAAEa,GADO,CAEbT,QAAQ,CAAEM,GAFG,CAAd,EAIA,C,uCAES,iBACT,mBACC,2BAAK,SAAS,CAAC,WAAf,eACC,yCADD,cAEC,8BACG,KAAKX,KAAL,CAAWC,IAAX,CAAgBc,GAAhB,CAAqB,SAACF,IAAD,CAAOG,KAAP,qBACtB,oBAAC,QAAD,EACC,IAAI,CAAEH,IADP,CAEC,cAAc,CAAE,MAAI,CAACI,cAAL,CAAoBC,IAApB,CAAyB,MAAzB,CAFjB,CAGC,WAAW,CAAE,MAAI,CAACC,WAAL,CAAiBD,IAAjB,CAAsB,MAAtB,CAHd,CAIC,GAAG,CAAEF,KAJN,EADsB,EAArB,CADH,CAFD,cAaC,oBAAC,MAAD,EAAQ,UAAU,CAAE,KAAKI,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAApB,CAA6C,IAAI,CAAE,KAAKlB,KAAL,CAAWC,IAAX,CAAgBoB,MAAnE,EAbD,CADD,CAiBA,C,sBA/EqB1B,S,EAkFvB,cAAeG,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport Dialog from './Dialog';\r\nimport './main.css';\r\n\r\nclass TodoList extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlist: [{\r\n\t\t\t\tid: 0,\r\n\t\t\t\tname: '找个日常实习',\r\n\t\t\t\tstatus: 0\r\n\t\t\t}, {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tname: '待到明年1月',\r\n\t\t\t\tstatus: 0\r\n\t\t\t}, {\r\n\t\t\t\tid: 2,\r\n\t\t\t\tname: '再来看看春招',\r\n\t\t\t\tstatus : 0\r\n\t\t\t}],\r\n\t\t\tfinished: 0\r\n\t\t};\r\n\t}\r\n\r\n\taddTask (newitem) {\r\n\t\tvar allTask = this.state.list;\r\n\t\tallTask.push(newitem);\r\n\t\tthis.setState({\r\n\t\t\tlist: allTask\r\n\t\t});\r\n\t}\r\n\r\n\tupdateFinished (todoItem) {\r\n\t\tvar sum = 0;\r\n\t\tthis.state.list.forEach( (item) => {\r\n\t\t\tif (item.id === todoItem.id) {\r\n\t\t\t\titem.status = todoItem.status;\r\n\t\t\t}\r\n\t\t\tif (item.status === 1) {\r\n\t\t\t\tsum++;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tfinished: sum\r\n\t\t});\r\n\t}\r\n\r\n\tupdateTotal (todoItem) {\r\n\t\tvar obj = [], sum = 0;\r\n\t\tthis.state.list.forEach((item) => {\r\n\t\t\tif (item.id !== todoItem.id) {\r\n\t\t\t\tobj.push(item);\r\n\t\t\t\tif (item.status === 1 ) {\r\n\t\t\t\t\tsum++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tlist: obj,\r\n\t\t\tfinished: sum\r\n\t\t});\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1>TodoList</h1>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{ this.state.list.map ((item, index) =>\r\n\t\t\t\t\t\t<ListItem \r\n\t\t\t\t\t\t\titem={item}  \r\n\t\t\t\t\t\t\tfinishedChange={this.updateFinished.bind(this)} \r\n\t\t\t\t\t\t\ttotalChange={this.updateTotal.bind(this)}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t    {/* <li>{this.state.finished}已完成&nbsp;/&nbsp;{this.state.list.length}总数</li> */}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<Dialog addNewTask={this.addTask.bind(this)} nums={this.state.list.length}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}